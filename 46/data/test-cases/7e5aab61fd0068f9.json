{
  "uid" : "7e5aab61fd0068f9",
  "name" : "test_modify_data",
  "fullName" : "test.test_conduit_krf.TestConduit#test_modify_data",
  "historyId" : "92877447636dd7b4ade4940c1a9abae3",
  "time" : {
    "start" : 1628874480856,
    "stop" : 1628874503874,
    "duration" : 23018
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'cim' == 'uj cim'\n  - uj cim\n  + cim",
  "statusTrace" : "self = <test_conduit_krf.TestConduit object at 0x7fbc8ea95340>\n\n    def test_modify_data(self):\n        accept_cookies(self.browser)\n    \n        login(self.browser, user_login)\n    \n        add_new_article(self.browser, input_data_modify)\n        title_list = []\n        title_list.append(title)\n    \n        WebDriverWait(self.browser, 5).until(\n            EC.visibility_of_element_located((By.XPATH, '//*[@href=\"#/@a/\"]'))\n        ).click()\n        time.sleep(2)\n    \n        old_title = WebDriverWait(self.browser, 10).until(\n            EC.visibility_of_element_located((By.XPATH, '//*[@class=\"preview-link\"]/h1'))\n        )\n        title_list.append(old_title.text)\n        old_title.click()\n        time.sleep(2)\n    \n        WebDriverWait(self.browser, 30).until(\n            EC.visibility_of_element_located((By.XPATH, '//div[@class=\"article-meta\"]/span/a/span'))\n        ).click()\n        time.sleep(2)\n    \n        new_title = WebDriverWait(self.browser, 10).until(\n            EC.visibility_of_element_located((By.XPATH, '//*[@placeholder=\"Article Title\"]'))\n        )\n        new_title.clear()\n        new_title.send_keys(title)\n        time.sleep(2)\n    \n        xpath(self.browser, '//button[@type=\"submit\"]').click()\n        time.sleep(5)\n    \n        new_post_title = WebDriverWait(self.browser, 10).until(\n            EC.visibility_of_element_located((By.XPATH, '//*[@class=\"container\"]/h1'))\n        )\n        title_list.append(new_post_title.text)\n        time.sleep(2)\n    \n        # assert(self.browser.current_url == f'http://localhost:1667/#/articles/{title_list[2]}')\n>       assert (title_list[2] == title_list[0])\nE       AssertionError: assert 'cim' == 'uj cim'\nE         - uj cim\nE         + cim\n\ntest/test_conduit_krf.py:256: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'cim' == 'uj cim'\n  - uj cim\n  + cim",
    "statusTrace" : "self = <test_conduit_krf.TestConduit object at 0x7fbc8ea95340>\n\n    def test_modify_data(self):\n        accept_cookies(self.browser)\n    \n        login(self.browser, user_login)\n    \n        add_new_article(self.browser, input_data_modify)\n        title_list = []\n        title_list.append(title)\n    \n        WebDriverWait(self.browser, 5).until(\n            EC.visibility_of_element_located((By.XPATH, '//*[@href=\"#/@a/\"]'))\n        ).click()\n        time.sleep(2)\n    \n        old_title = WebDriverWait(self.browser, 10).until(\n            EC.visibility_of_element_located((By.XPATH, '//*[@class=\"preview-link\"]/h1'))\n        )\n        title_list.append(old_title.text)\n        old_title.click()\n        time.sleep(2)\n    \n        WebDriverWait(self.browser, 30).until(\n            EC.visibility_of_element_located((By.XPATH, '//div[@class=\"article-meta\"]/span/a/span'))\n        ).click()\n        time.sleep(2)\n    \n        new_title = WebDriverWait(self.browser, 10).until(\n            EC.visibility_of_element_located((By.XPATH, '//*[@placeholder=\"Article Title\"]'))\n        )\n        new_title.clear()\n        new_title.send_keys(title)\n        time.sleep(2)\n    \n        xpath(self.browser, '//button[@type=\"submit\"]').click()\n        time.sleep(5)\n    \n        new_post_title = WebDriverWait(self.browser, 10).until(\n            EC.visibility_of_element_located((By.XPATH, '//*[@class=\"container\"]/h1'))\n        )\n        title_list.append(new_post_title.text)\n        time.sleep(2)\n    \n        # assert(self.browser.current_url == f'http://localhost:1667/#/articles/{title_list[2]}')\n>       assert (title_list[2] == title_list[0])\nE       AssertionError: assert 'cim' == 'uj cim'\nE         - uj cim\nE         + cim\n\ntest/test_conduit_krf.py:256: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f92ec6aeac60365e",
      "name" : "log",
      "source" : "f92ec6aeac60365e.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "60cf31aa5028744",
      "name" : "stderr",
      "source" : "60cf31aa5028744.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_conduit_krf"
  }, {
    "name" : "subSuite",
    "value" : "TestConduit"
  }, {
    "name" : "host",
    "value" : "fv-az47-628"
  }, {
    "name" : "thread",
    "value" : "3694-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_conduit_krf"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "7e5aab61fd0068f9.json",
  "parameterValues" : [ ]
}